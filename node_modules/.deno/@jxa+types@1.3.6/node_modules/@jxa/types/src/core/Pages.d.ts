
export namespace Pages {
    // Default Application
 export interface Application {}
    // Class
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * This provides the base rich text class for all iWork applications.
  */
 export interface RichText {
   /**
    * The color of the font. Expressed as an RGB value consisting of a list of three color values from 0 to 65535. ex: Blue = {0, 0, 65535}.
    */
   color(): any;
   /**
    * The name of the font. Can be the PostScript name, such as: “TimesNewRomanPS-ItalicMT”, or display name: “Times New Roman Italic”. TIP: Use the Font Book application get the information about a typeface.
    */
   font(): string;
   /**
    * The size of the font.
    */
   size(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * One of some text's characters.
  */
 export interface Character {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * One of some text's paragraphs.
  */
 export interface Paragraph {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * One of some text's words.
  */
 export interface Word {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A container for iWork items
  */
 export interface IWorkContainer {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An item which supports formatting
  */
 export interface IWorkItem {
   /**
    * The height of the iWork item.
    */
   height(): number;
   /**
    * Whether the object is locked.
    */
   locked(): boolean;
   /**
    * The iWork container containing this iWork item.
    */
   parent(): any;
   /**
    * The horizontal and vertical coordinates of the top left point of the iWork item.
    */
   position(): any;
   /**
    * The width of the iWork item.
    */
   width(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An audio clip
  */
 export interface AudioClip {
   /**
    * The name of the audio file.
    */
   fileName(): any;
   /**
    * The volume setting for the audio clip, from 0 (none) to 100 (full volume).
    */
   clipVolume(): number;
   /**
    * If or how the audio clip repeats.
    */
   repetitionMethod(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A shape container
  */
 export interface Shape {
   /**
    * The background, if any, for the shape.
    */
   backgroundFillType(): any;
   /**
    * The text contained within the shape.
    */
   objectText(): any;
   /**
    * Is the iWork item displaying a reflection?
    */
   reflectionShowing(): boolean;
   /**
    * The percentage of reflection of the iWork item, from 0 (none) to 100 (full).
    */
   reflectionValue(): number;
   /**
    * The rotation of the iWork item, in degrees from 0 to 359.
    */
   rotation(): number;
   /**
    * The opacity of the object, in percent.
    */
   opacity(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A chart
  */
 export interface Chart {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * An image container
  */
 export interface Image {
   /**
    * Text associated with the image, read aloud by VoiceOver.
    */
   description(): string;
   /**
    * The image file.
    */
   file(): any;
   /**
    * The name of the image file.
    */
   fileName(): any;
   /**
    * The opacity of the object, in percent.
    */
   opacity(): number;
   /**
    * Is the iWork item displaying a reflection?
    */
   reflectionShowing(): boolean;
   /**
    * The percentage of reflection of the iWork item, from 0 (none) to 100 (full).
    */
   reflectionValue(): number;
   /**
    * The rotation of the iWork item, in degrees from 0 to 359.
    */
   rotation(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A group container
  */
 export interface Group {
   /**
    * The height of the iWork item.
    */
   height(): number;
   /**
    * The iWork container containing this iWork item.
    */
   parent(): any;
   /**
    * The horizontal and vertical coordinates of the top left point of the iWork item.
    */
   position(): any;
   /**
    * The width of the iWork item.
    */
   width(): number;
   /**
    * The rotation of the iWork item, in degrees from 0 to 359.
    */
   rotation(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A line
  */
 export interface Line {
   /**
    * A list of two numbers indicating the horizontal and vertical position of the line ending point.
    */
   endPoint(): any;
   /**
    * Is the iWork item displaying a reflection?
    */
   reflectionShowing(): boolean;
   /**
    * The percentage of reflection of the iWork item, from 0 (none) to 100 (full).
    */
   reflectionValue(): number;
   /**
    * The rotation of the iWork item, in degrees from 0 to 359.
    */
   rotation(): number;
   /**
    * A list of two numbers indicating the horizontal and vertical position of the line starting point.
    */
   startPoint(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A movie container
  */
 export interface Movie {
   /**
    * The name of the movie file.
    */
   fileName(): any;
   /**
    * The volume setting for the movie, from 0 (none) to 100 (full volume).
    */
   movieVolume(): number;
   /**
    * The opacity of the object, in percent.
    */
   opacity(): number;
   /**
    * Is the iWork item displaying a reflection?
    */
   reflectionShowing(): boolean;
   /**
    * The percentage of reflection of the iWork item, from 0 (none) to 100 (full).
    */
   reflectionValue(): number;
   /**
    * If or how the movie repeats.
    */
   repetitionMethod(): any;
   /**
    * The rotation of the iWork item, in degrees from 0 to 359.
    */
   rotation(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A table
  */
 export interface Table {
   /**
    * The item's name.
    */
   name(): string;
   /**
    * The range describing every cell in the table.
    */
   cellRange(): any;
   /**
    * The cells currently selected in the table.
    */
   selectionRange(): any;
   /**
    * The number of rows in the table.
    */
   rowCount(): number;
   /**
    * The number of columns in the table.
    */
   columnCount(): number;
   /**
    * The number of header rows in the table.
    */
   headerRowCount(): number;
   /**
    * The number of header columns in the table.
    */
   headerColumnCount(): number;
   /**
    * The number of footer rows in the table.
    */
   footerRowCount(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A text container
  */
 export interface TextItem {
   /**
    * The background, if any, for the text item.
    */
   backgroundFillType(): any;
   /**
    * The text contained within the text item.
    */
   objectText(): any;
   /**
    * The opacity of the object, in percent.
    */
   opacity(): number;
   /**
    * Is the iWork item displaying a reflection?
    */
   reflectionShowing(): boolean;
   /**
    * The percentage of reflection of the iWork item, from 0 (none) to 100 (full).
    */
   reflectionValue(): number;
   /**
    * The rotation of the iWork item, in degrees from 0 to 359.
    */
   rotation(): number;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A range of cells in a table
  */
 export interface Range {
   /**
    * The font of the range's cells.
    */
   fontName(): string;
   /**
    * The font size of the range's cells.
    */
   fontSize(): any;
   /**
    * The format of the range's cells.
    */
   format(): any;
   /**
    * The horizontal alignment of content in the range's cells.
    */
   alignment(): any;
   /**
    * The range's coordinates.
    */
   name(): string;
   /**
    * The text color of the range's cells.
    */
   textColor(): any;
   /**
    * Whether text should wrap in the range's cells.
    */
   textWrap(): boolean;
   /**
    * The background color of the range's cells.
    */
   backgroundColor(): any;
   /**
    * The vertical alignment of content in the range's cells.
    */
   verticalAlignment(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A cell in a table
  */
 export interface Cell {
   /**
    * The cell's column.
    */
   column(): any;
   /**
    * The cell's row.
    */
   row(): any;
   /**
    * The actual value in the cell, or missing value if the cell is empty.
    */
   value(): any;
   /**
    * The formatted value in the cell, or missing value if the cell is empty.
    */
   formattedValue(): string;
   /**
    * The formula in the cell, as text, e.g. =SUM(40+2). If the cell does not contain a formula, returns missing value. To set the value of a cell to a formula as text, use the value property.
    */
   formula(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A row of cells in a table
  */
 export interface Row {
   /**
    * The row's index in the table (e.g., the second row has address 2).
    */
   address(): number;
   /**
    * The height of the row.
    */
   height(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A column of cells in a table
  */
 export interface Column {
   /**
    * The column's index in the table (e.g., the second column has address 2).
    */
   address(): number;
   /**
    * The width of the column.
    */
   width(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A styled document layout.
  */
 export interface Template {
   /**
    * The identifier used by the application.
    */
   id(): string;
   /**
    * The localized name displayed to the user.
    */
   name(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A section within a document.
  */
 export interface Section {
   /**
    * The section body text.
    */
   bodyText(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A page of the document.
  */
 export interface Page {
   /**
    * The page body text.
    */
   bodyText(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * One of some text's placeholders.
  */
 export interface PlaceholderText {
   /**
    * Its script tag.
    */
   tag(): string;
 }
    
    // CLass Extension
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * The Pages application.
  */
 export interface Application {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A Pages document.
  */
 export interface Document {
   /**
    * Document ID.
    */
   id(): string;
   /**
    * The template assigned to the document.
    */
   documentTemplate(): any;
   /**
    * The document body text.
    */
   bodyText(): any;
   /**
    * Whether the document has body text.
    */
   documentBody(): boolean;
   /**
    * Current page of the document.
    */
   currentPage(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * This modifies the iWork rich text class for all Pages.
  */
 export interface RichText {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * One of some text's paragraphs.
  */
 export interface Paragraph {}
    
    // Records
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 export interface ExportOptions {
   /**
    * EPUB title
    */
   title(): string;
   /**
    * EPUB author
    */
   author(): string;
   /**
    * EPUB genre
    */
   genre(): string;
   /**
    * EPUB language (Language name or ISO language code)
    */
   language(): string;
   /**
    * EPUB publisher
    */
   publisher(): string;
   /**
    * EPUB first page is cover
    */
   cover(): boolean;
   /**
    * EPUB fixed layout
    */
   fixedLayout(): boolean;
   /**
    * password
    */
   password(): string;
   /**
    * password hint
    */
   passwordHint(): string;
   /**
    * image quality
    */
   imageQuality(): any;
 }

    // Function options
    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface SetOptionalParameter {
      /**
       * The new value.
       */
      to: any;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface MakeOptionalParameter {
      /**
       * The class of the new object.
       */
      new: any;
      /**
       * The location at which to insert the object.
       */
      at?: any;
      /**
       * The initial contents of the object.
       */
      withData?: any;
      /**
       * The initial values for properties of the object.
       */
      withProperties?: any;
    }



    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface SortOptionalParameter {
      /**
       * The column to sort by.
       */
      by: any;
      direction?: any;
      /**
       * Limit the sort to the specified rows.
       */
      inRows?: any;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface MakeOptionalParameter1 {
      /**
       * The class of the new object.
       */
      new: any;
      /**
       * The location at which to insert the object.
       */
      at?: any;
      /**
       * The initial contents of the object.
       */
      withData?: any;
      /**
       * The initial values for properties of the object.
       */
      withProperties?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ExportOptionalParameter {
      /**
       * the destination file
       */
      to: any;
      /**
       * The format to use.
       */
      as: any;
      /**
       * Optional export settings.
       */
      withProperties?: any;
    }

}
export interface Pages extends Pages.Application {
    // Functions

     /**
      * Sets the value of the specified object(s).
      * @param directParameter undefined
      * @param option
      * 
      */
     set(directParameter: any, option?: Pages.SetOptionalParameter): void;

     /**
      * Delete an object.
      * @param directParameter undefined
      * 
      */
     delete(directParameter: any, ): void;

     /**
      * Create a new object.

      * @param option
      * @return The new object.
      */
     make(option?: Pages.MakeOptionalParameter): any;

     /**
      * Clear the contents of a specified range of cells, including formatting and style.
      * @param directParameter undefined
      * 
      */
     clear(directParameter: Pages.Range, ): void;

     /**
      * Merge a specified range of cells.
      * @param directParameter undefined
      * 
      */
     merge(directParameter: Pages.Range, ): void;

     /**
      * Sort the rows of the table.
      * @param directParameter undefined
      * @param option
      * 
      */
     sort(directParameter: Pages.Table, option?: Pages.SortOptionalParameter): void;

     /**
      * Unmerge all merged cells in a specified range.
      * @param directParameter undefined
      * 
      */
     unmerge(directParameter: Pages.Range, ): void;

     /**
      * Create a new object.

      * @param option
      * @return The new object.
      */
     make(option?: Pages.MakeOptionalParameter1): any;

     /**
      * Export a document to another file
      * @param directParameter The document to export
      * @param option
      * 
      */
     export(directParameter: Pages.Document, option?: Pages.ExportOptionalParameter): void;
}
