
export namespace Safari {
    // Default Application
 export interface Application {}
    // Class
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A Safari window tab.
  */
 export interface Tab {
   /**
    * The HTML source of the web page currently loaded in the tab.
    */
   source(): string;
   /**
    * The current URL of the tab.
    */
   URL(): string;
   /**
    * The index of the tab, ordered left to right.
    */
   index(): number;
   /**
    * The text of the web page currently loaded in the tab. Modifications to text aren't reflected on the web page.
    */
   text(): string;
   /**
    * Whether the tab is currently visible.
    */
   visible(): boolean;
   /**
    * The name of the tab.
    */
   name(): string;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 export interface SourceProvider {}

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 export interface ContentsProvider {}
    
    // CLass Extension
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A Safari window.
  */
 export interface Window {
   /**
    * The current tab.
    */
   currentTab(): any;
 }

 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */

 /**
  * A Safari document representing the active tab in a window.
  */
 export interface Document {
   /**
    * The HTML source of the web page currently loaded in the document.
    */
   source(): string;
   /**
    * The current URL of the document.
    */
   URL(): string;
   /**
    * The text of the web page currently loaded in the document. Modifications to text aren't reflected on the web page.
    */
   text(): string;
 }
    
    // Records

    // Function options
    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface AddReadingListItemOptionalParameter {
      /**
       * Preview text for the Reading List item, usually the first few sentences of the article
       */
      andPreviewText?: string;
      /**
       * Title of the Reading List item
       */
      withTitle?: string;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface DoJavaScriptOptionalParameter {
      /**
       * The tab that the JavaScript should be evaluated in.
       */
      in?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface EmailContentsOptionalParameter {
      /**
       * The tab to send.
       */
      of?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface SearchTheWebOptionalParameter {
      /**
       * The tab that the search results should shown in.
       */
      in?: any;
      /**
       * The query to search for.
       */
      for: string;
    }




}
export interface Safari extends Safari.Application {
    // Functions

     /**
      * Add a new Reading List item with the given URL. Allows a custom title and preview text to be specified.
      * @param directParameter URL of the Reading List item
      * @param option
      * 
      */
     addReadingListItem(directParameter: string, option?: Safari.AddReadingListItemOptionalParameter): void;

     /**
      * Applies a string of JavaScript code to a document.
      * @param directParameter The JavaScript code to evaluate.
      * @param option
      * @return undefined
      */
     doJavaScript(directParameter: string, option?: Safari.DoJavaScriptOptionalParameter): any;

     /**
      * Emails the contents of a tab.

      * @param option
      * 
      */
     emailContents(option?: Safari.EmailContentsOptionalParameter): void;

     /**
      * Searches the web using Safari's current search provider.

      * @param option
      * 
      */
     searchTheWeb(option?: Safari.SearchTheWebOptionalParameter): void;

     /**
      * Shows Safari's bookmarks.

      * 
      */
     showBookmarks(): void;

     /**
      * Show Safari Extensions preferences.
      * @param directParameter The identifier of the extension to select.
      * 
      */
     showExtensionsPreferences(directParameter: string, ): void;

     /**
      * Dispatch a message to a Safari Extension.
      * @param directParameter A dictionary describing the message
      * 
      */
     dispatchMessageToExtension(directParameter: any, ): void;
}
